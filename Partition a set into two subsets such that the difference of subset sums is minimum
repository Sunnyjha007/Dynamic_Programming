//important values are always positive in vector arr.
#include<bits/stdc++.h>
int solve(vector<int>& arr,int n,int sum){
    vector<vector<int>> dp(n+1,vector<int>(sum+1,0));
    for(int i=0;i<=n;i++)dp[i][0] = 1;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=sum;j++){
            if(arr[i-1]<=j){
                dp[i][j] = dp[i-1][j]||dp[i-1][j-arr[i-1]];
            }else{
                dp[i][j] = dp[i-1][j];
            }
        }   
    }
    vector<int> v;
        for(int i=0;i<=sum/2;i++){
           if(dp[n][i])v.push_back(i);
        }
        int ans = INT_MAX;
        for(int i=0;i<v.size();i++){
            ans = min(ans,(sum-2*v[i]));
        }
    return ans;
}
int minSubsetSumDifference(vector<int>& arr, int n)
{
	// Write your code here.
    int sum = accumulate(arr.begin(),arr.end(),0);
    return solve(arr,n,sum);
}
