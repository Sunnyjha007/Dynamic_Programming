//Hackerrank - The Longest Common Subsequence

vector<int> longestCommonSubsequence(vector<int> a, vector<int> b) {
    int m = a.size(),n=b.size();
    vector<vector<int>> dp(m+1,vector<int>(n+1,0));
    for(int i=1;i<=m;i++){
        for(int j=1;j<=n;j++){
            if(a[i-1]==b[j-1]){
                dp[i][j] = 1+ dp[i-1][j-1];
            }else{
                dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
            }
        }
    }
    int i=m,j=n;
    vector<int> ans;
    while(i>0&&j>0){
        if(a[i-1]==b[j-1]){
            ans.push_back(a[i-1]);
            i--,j--;
        }else{
            if(dp[i-1][j]>dp[i][j-1]){
                i--;
            }else{
                j--;
            }
        }
    }
    reverse(ans.begin(),ans.end());
    return ans;

}
