//Leetcode - 494
int findTargetSumWays(vector<int>& nums, int target) {
        int n = nums.size();
        if(nums.empty())return 0;
        int sum = accumulate(nums.begin(),nums.end(),0);
        if(sum < abs(target) || (target+sum) %2 != 0) return 0;
        if (((sum + target) & 1) || sum < abs(target))return 0;
        int newTarget = (sum+target)/2;
        vector<vector<int>> dp(n+1,vector<int>(newTarget+1,0));
        for(int i=0;i<=n;i++)dp[i][0]=1;
        for(int i=1;i<=n;i++){
            for(int j=0;j<=newTarget;j++){
                if(nums[i-1]<=j){
                    dp[i][j] = dp[i-1][j]+dp[i-1][j-nums[i-1]];
                }else{
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        return dp[n][newTarget];
}
